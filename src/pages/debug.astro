---
import { CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY, CLOUDINARY_API_SECRET } from '../constants';
import Layout from '../layouts/Layout.astro';
import { getImagesFromFolder, type CloudinaryResource } from '../utils/cloudinary';

interface PageData {
  title: string;
  description: string;
}

interface EnvVars {
  cloudName: string | undefined;
  apiKey: string | undefined;
  hasSecret: boolean;
}

interface ImageInfo {
  count: number;
  data: CloudinaryResource[];
}

interface ErrorInfo {
  message: string;
  stack?: string;
}

interface DebugInfo {
  envVars?: EnvVars;
  images?: ImageInfo;
  allImages?: ImageInfo;
  error?: ErrorInfo;
  timestamp?: string;
  environment?: string;
}

const pageData: PageData = {
  title: 'Debug - Cloudinary',
  description: 'P√°gina para depurar la conexi√≥n con Cloudinary',
};

const debugInfo: DebugInfo = {
  timestamp: new Date().toISOString(),
  environment: import.meta.env.MODE,
};

try {
  if (import.meta.env.DEV) {
    console.log('=== INICIANDO DEBUG ===');
  }

  // Verificar variables de entorno
  debugInfo.envVars = {
    cloudName: CLOUDINARY_CLOUD_NAME,
    apiKey: CLOUDINARY_API_KEY,
    hasSecret: !!CLOUDINARY_API_SECRET,
  };

  if (import.meta.env.DEV) {
    console.log('Variables de entorno:', debugInfo.envVars);
  }

  // Intentar obtener im√°genes de carpeta espec√≠fica
  const images = await getImagesFromFolder('imageSD');
  debugInfo.images = {
    count: images.length,
    data: images.slice(0, 3), // Solo los primeros 3 para no sobrecargar
  };

  if (import.meta.env.DEV) {
    console.log("Im√°genes encontradas en 'imageSD':", debugInfo.images.count);
  }

  // Intentar obtener todas las im√°genes (sin carpeta espec√≠fica)
  const allImages = await getImagesFromFolder('');
  debugInfo.allImages = {
    count: allImages.length,
    data: allImages.slice(0, 3),
  };

  if (import.meta.env.DEV) {
    console.log('Total de im√°genes:', debugInfo.allImages.count);
  }
} catch (error) {
  debugInfo.error = {
    message: error instanceof Error ? error.message : 'Error desconocido',
    stack: error instanceof Error ? error.stack : undefined,
  };

  if (import.meta.env.DEV) {
    console.error('Error en debug:', error);
  }
}
---

<Layout title={pageData.title} description={pageData.description}>
  <div class='mb-8'>
    <h1 class='text-3xl font-bold text-gray-900 mb-4'>Debug - Cloudinary</h1>
    <p class='text-gray-600'>Informaci√≥n de depuraci√≥n para diagnosticar problemas</p>
  </div>
  <div class='space-y-6'>
    <!-- Informaci√≥n del Sistema -->
    <div class='bg-white border border-gray-200 rounded-lg p-6'>
      <h2 class='text-xl font-semibold text-gray-900 mb-4'>Informaci√≥n del Sistema</h2>
      <div class='bg-gray-50 rounded p-4 font-mono text-sm space-y-2'>
        <div>
          <strong>Entorno:</strong>
          <span
            class={`px-2 py-1 rounded text-xs font-medium ml-2 ${
              debugInfo.environment === 'development'
                ? 'bg-yellow-100 text-yellow-800'
                : 'bg-green-100 text-green-800'
            }`}
          >
            {debugInfo.environment}
          </span>
        </div>
        <div>
          <strong>Timestamp:</strong>
          {debugInfo.timestamp}
        </div>
        <div>
          <strong>URL Actual:</strong>
          {Astro.url.href}
        </div>
      </div>
    </div>

    <!-- Variables de entorno -->
    <div class='bg-white border border-gray-200 rounded-lg p-6'>
      <h2 class='text-xl font-semibold text-gray-900 mb-4'>Variables de Entorno</h2>
      <div class='bg-gray-50 rounded p-4 font-mono text-sm space-y-2'>
        <div class='flex items-center'>
          <strong class='w-32'>Cloud Name:</strong>
          <span class='flex items-center'>
            {
              debugInfo.envVars?.cloudName ? (
                <>
                  <span class='text-green-600 mr-2'>‚úÖ</span>
                  <span class='text-gray-700'>{debugInfo.envVars.cloudName}</span>
                </>
              ) : (
                <>
                  <span class='text-red-600 mr-2'>‚ùå</span>
                  <span class='text-red-600'>No configurado</span>
                </>
              )
            }
          </span>
        </div>
        <div class='flex items-center'>
          <strong class='w-32'>API Key:</strong>
          <span class='flex items-center'>
            {
              debugInfo.envVars?.apiKey ? (
                <>
                  <span class='text-green-600 mr-2'>‚úÖ</span>
                  <span class='text-gray-700'>{debugInfo.envVars.apiKey.substring(0, 8)}...</span>
                </>
              ) : (
                <>
                  <span class='text-red-600 mr-2'>‚ùå</span>
                  <span class='text-red-600'>No configurado</span>
                </>
              )
            }
          </span>
        </div>
        <div class='flex items-center'>
          <strong class='w-32'>API Secret:</strong>
          <span class='flex items-center'>
            {
              debugInfo.envVars?.hasSecret ? (
                <>
                  <span class='text-green-600 mr-2'>‚úÖ</span>
                  <span class='text-gray-700'>Configurado (oculto)</span>
                </>
              ) : (
                <>
                  <span class='text-red-600 mr-2'>‚ùå</span>
                  <span class='text-red-600'>No configurado</span>
                </>
              )
            }
          </span>
        </div>
      </div>
    </div>

    <!-- Error informaci√≥n -->
    {
      debugInfo.error && (
        <div class='bg-red-50 border border-red-200 rounded-lg p-6'>
          <h2 class='text-xl font-semibold text-red-800 mb-4'>Error</h2>
          <div class='bg-red-100 rounded p-4 font-mono text-sm text-red-800'>
            <div>
              <strong>Mensaje:</strong> {debugInfo.error.message}
            </div>
            {debugInfo.error.stack && (
              <details class='mt-2'>
                <summary class='cursor-pointer'>Ver stack trace</summary>
                <pre class='mt-2 text-xs'>{debugInfo.error.stack}</pre>
              </details>
            )}
          </div>
        </div>
      )
    }
    <!-- Im√°genes de la carpeta imageSD -->
    <div class='bg-white border border-gray-200 rounded-lg p-6'>
      <h2 class='text-xl font-semibold text-gray-900 mb-4'>Im√°genes en carpeta "imageSD"</h2>
      <div class='mb-4 flex items-center space-x-4'>
        <span
          class={`text-lg font-medium px-3 py-1 rounded ${
            (debugInfo.images?.count || 0) > 0
              ? 'bg-green-100 text-green-800'
              : 'bg-yellow-100 text-yellow-800'
          }`}
        >
          Total: {debugInfo.images?.count || 0}
        </span>
        {
          debugInfo.images?.count === 0 && (
            <span class='text-sm text-gray-500'>La carpeta est√° vac√≠a o no existe</span>
          )
        }
      </div>
      {
        debugInfo.images?.data && debugInfo.images.data.length > 0 && (
          <div class='space-y-4'>
            <p class='text-sm text-gray-600 mb-2'>
              Mostrando las primeras {debugInfo.images.data.length} im√°genes:
            </p>
            <div class='bg-gray-50 rounded p-4 font-mono text-sm max-h-80 overflow-auto'>
              <pre>{JSON.stringify(debugInfo.images.data, null, 2)}</pre>
            </div>
          </div>
        )
      }
    </div>

    <!-- Todas las im√°genes -->
    <div class='bg-white border border-gray-200 rounded-lg p-6'>
      <h2 class='text-xl font-semibold text-gray-900 mb-4'>Resumen de todas las im√°genes</h2>
      <div class='mb-4 flex items-center space-x-4'>
        <span
          class={`text-lg font-medium px-3 py-1 rounded ${
            (debugInfo.allImages?.count || 0) > 0
              ? 'bg-green-100 text-green-800'
              : 'bg-red-100 text-red-800'
          }`}
        >
          Total: {debugInfo.allImages?.count || 0}
        </span>
        {
          debugInfo.allImages?.count === 0 && (
            <span class='text-sm text-gray-500'>
              No hay im√°genes en Cloudinary o hay un problema de conexi√≥n
            </span>
          )
        }
      </div>
      {
        debugInfo.allImages?.data && debugInfo.allImages.data.length > 0 && (
          <div class='space-y-4'>
            <p class='text-sm text-gray-600 mb-2'>
              Muestra de {debugInfo.allImages.data.length} im√°genes del total:
            </p>
            <div class='bg-gray-50 rounded p-4 font-mono text-sm max-h-80 overflow-auto'>
              <pre>{JSON.stringify(debugInfo.allImages.data, null, 2)}</pre>
            </div>
          </div>
        )
      }
    </div>
  </div>
  <div class='mt-8 flex flex-col sm:flex-row gap-4 justify-center items-center'>
    <button
      onclick='window.location.reload()'
      class='bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors'
    >
      üîÑ Refrescar Debug
    </button>
    <a
      href='/gallery'
      class='bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors'
    >
      üì∏ Volver a la Galer√≠a
    </a>
    <a
      href='/upload'
      class='bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors'
    >
      ‚¨ÜÔ∏è Subir Im√°genes
    </a>
    <a
      href='/'
      class='bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition-colors'
    >
      üè† Inicio
    </a>
  </div>

  {
    !debugInfo.error &&
      debugInfo.envVars?.cloudName &&
      debugInfo.envVars?.apiKey &&
      debugInfo.envVars?.hasSecret && (
        <div class='mt-6 p-4 bg-green-50 border border-green-200 rounded-lg'>
          <div class='flex items-center'>
            <span class='text-green-600 text-xl mr-2'>‚úÖ</span>
            <p class='text-green-800 font-medium'>
              ¬°Configuraci√≥n correcta! Cloudinary est√° configurado y funcionando.
            </p>
          </div>
        </div>
      )
  }

  {
    debugInfo.error && (
      <div class='mt-6 p-4 bg-red-50 border border-red-200 rounded-lg'>
        <div class='flex items-center'>
          <span class='text-red-600 text-xl mr-2'>‚ùå</span>
          <p class='text-red-800 font-medium'>
            Hay problemas con la configuraci√≥n. Revisa los errores arriba.
          </p>
        </div>
      </div>
    )
  }
</Layout>
